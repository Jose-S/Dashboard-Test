"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const t=require("@diez/cli-core"),e=require("@diez/engine"),o=require("chokidar"),i=require("fs-extra"),r=require("path"),s=require("./api"),n=require("./server"),a=require("./utils");exports.Compiler=class{constructor(t){this.parser=t,this.cleanupHotUrlMutex=(()=>{i.removeSync(this.hotUrlMutex),process.exit(0)});const e=a.inferProjectName(t.projectRoot);this.output=this.createOutput(r.join(t.projectRoot,"build",`diez-${e}-${t.options.target}`),e),t.hot||(i.removeSync(this.output.sdkRoot),i.ensureDirSync(this.output.sdkRoot))}get hotStaticRoot(){return r.join(this.parser.projectRoot,".diez",`${this.parser.options.target}-assets`)}createTargetComponent(t){return{...this.parser.getComponentForTypeOrThrow(t),properties:[]}}getPrimitive(e,o){const i=this.getPrimitiveName(e.type),r=this.getPrimitiveInitializer(e.type,o);if(i&&r)return{...e,initializer:r,type:i};t.Log.warning(`Unknown non-component primitive value: ${o.toString()} with type ${e.type}`)}async processComponentProperty(t,e,o,i){if(Array.isArray(e))return t.depth?this.collectComponentProperties(t,await Promise.all(e.map(async(e,r)=>this.processComponentProperty(t,e,o[r],i)))):void i.warnings.ambiguousTypes.add(t.name);if(t.isComponent){const o=await this.processComponentInstance(e,t.type);if(!o)return void i.warnings.ambiguousTypes.add(t.name);const r=this.parser.components.get(t.type),s=await a.getBinding(this.parser.options.target,r.sourceModule,t.type);return s&&s.assetsBinder&&await s.assetsBinder(e,this.parser,this.output,o,t),Object.assign({originalType:t.type},t,{initializer:this.getInitializer(o)})}return this.getPrimitive(t,o)}async processComponentInstance(o,i){const r=this.parser.components.get(i);if(!r)return void t.Log.warning(`Unable to find component definition for ${i}!`);const s=this.createTargetComponent(i),n=e.serialize(o);for(const t of r.properties){if(o&&o.options&&o.options[t.name]&&Array.isArray(o.options[t.name].targets)&&!o.options[t.name].targets.includes(this.parser.options.target))continue;const e=await this.processComponentProperty(t,o[t.name],n[t.name],r);e&&s.properties.push(e)}return this.output.processedComponents.has(i)||(s.binding=await a.getBinding(this.parser.options.target,r.sourceModule||".",i),this.output.processedComponents.set(i,s)),s}async run(){let e;a.purgeRequireCache(require.resolve(this.parser.emitRoot));try{e=await a.loadComponentModule(this.parser.emitRoot)}catch(t){await a.showStackTracesFromRuntimeError(t),process.exit(1)}for(const o of this.parser.rootComponentNames){const{symbolName:i}=this.parser.getMetadataForTypeOrThrow(o),r=e[i];if(!r){t.Log.warning(`Unable to resolve component instance from ${this.parser.projectRoot}: ${o}.`);continue}const s=a.isConstructible(r)?new r:r;await this.processComponentInstance(s,o)}}get hotUrlMutex(){return r.join(this.parser.projectRoot,".diez",`${this.parser.options.target}-hot-url`)}writeHotUrlMutex(e,r){if(i.existsSync(this.hotUrlMutex))throw new a.ExistingHotUrlMutexError(`Found existing hot URL at ${this.hotUrlMutex}. If this is an error, please manually remove the file.`,this.hotUrlMutex);t.exitTrap(()=>this.cleanupHotUrlMutex()),this.output.hotUrl=`http://${e}:${r}`,i.writeFileSync(this.hotUrlMutex,this.output.hotUrl),o.watch(this.hotUrlMutex).on("unlink",this.cleanupHotUrlMutex)}async start(){if(await this.validateOptions(),this.parser.hot){const[t,e]=await Promise.all([a.getHotPort(),this.hostname()]);if(this.writeHotUrlMutex(e,t),!await this.buildHot())throw new Error("Unable to perform initial build.");n.serveHot(this.parser,this.hotComponent,t,this.hotStaticRoot),this.parser.on(s.CompilerEvent.Compiled,async()=>{await this.buildHot()})}else await this.run(),await this.writeSdk(),this.printUsageInstructions()}async buildHot(){Object.assign(this.output,this.createOutput(this.output.sdkRoot,this.output.projectName));try{await this.run()}catch(e){return t.Log.warning("Unable to compile."),t.Log.warning(e),!1}return await this.writeAssets(),i.copySync(this.parser.emitRoot,this.parser.hotRoot),!0}writeAssets(){const t=this.parser.hot?this.hotStaticRoot:this.staticRoot;i.removeSync(t);for(const[e,o]of this.output.assetBindings){const s=r.join(t,e);i.ensureDirSync(r.dirname(s)),o.copy?i.copySync(o.contents,s):i.outputFileSync(s,o.contents)}}};
//# sourceMappingURL=/@diez/compiler-core/lib/compiler.js.map