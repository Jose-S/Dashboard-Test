"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const a=require("@diez/cli-core"),n=require("@diez/storage"),t=require("change-case"),o=require("fs-extra"),r=require("path"),i=require("tar"),s=e(require("validate-npm-package-name")),c=require("./utils.git"),l=`https://examples.diez.org/${a.diezVersion}/createproject/project.tgz`,d=async(e,s,c)=>{const d=r.resolve(n.getTempFileName(),"examples");o.ensureDirSync(d),await(async e=>{const t=a.loadingMessage("Downloading template project from the Diez CDN..."),o=await n.downloadStream(l);if(t.stop(),!o)throw new Error("Unable to download template project from examples.diez.org. Please try again.");const r=i.x({cwd:e});return o.pipe(r),new Promise(e=>r.on("close",e))})(d);const m=t.pascalCase(s),p={openTag:"{{",closeTag:"}}",namePascalCase:m,nameLowerCase:t.lowerCase(m),nameKebabCase:t.kebabCase(s),nameCamelCase:t.camelCase(s),nameTitleCase:t.titleCase(s),nameNoCase:t.noCase(s),nameSnakeCase:t.snakeCase(s),nameConstantCase:t.constantCase(s),nameHeaderCase:t.headerCase(s),nameDotCase:t.dotCase(s),designSystemLinkingProtocol:c===a.PackageManagers.Yarn?"link":"file"};return n.outputTemplatePackage(d,e,p)};exports.createProject=(async(e,i,l=process.cwd())=>{(e=>{const n=s.default(e);if(!n.validForNewPackages){const t=[];throw n.errors&&t.push(...n.errors.map(e=>` - ${e}`)),n.warnings&&t.push(...n.warnings.map(e=>` - ${e}`)),t.length&&(a.Log.warning("Project name validation failed:"),a.Log.warning(...t)),new Error(`Unable to create project with name ${e}.`)}})(e);const m=await a.getPackageManager(),p=m.binary===a.PackageManagers.Yarn,g=r.resolve(l,r.basename(e)),u=i?g:r.join(g,"design-language");if(await(async(e,n=!1)=>{if(o.existsSync(e)&&!o.lstatSync(e).isDirectory())throw new Error(`Found a non-directory at ${e}.`);if(o.ensureDirSync(e),o.existsSync(r.join(e,"package.json")))throw new Error(`A Node.js project already exists at ${e}.`);if(!n&&!await a.canUseNpm(e))throw new Error(`Unable to start an NPM process in ${e}.`)})(u,p),i){const o={packageName:e,diezVersion:a.diezVersion,typescriptVersion:a.devDependencies.typescript,componentName:t.pascalCase(r.basename(e))};await n.outputTemplatePackage(r.resolve(__dirname,"..","templates","project"),g,o)}else try{await d(l,e,m.binary)}catch(e){throw a.Log.warning("Unable to download template project from the Diez CDN. Are you connected to the internet?"),a.Log.warning(`If you would like to generate an empty project, you can re-run this command with ${a.Format.code("--bare")}.`),e}const w=r.join(g,"example-codebases"),y=a.loadingMessage("Installing dependencies. This might take a couple of minutes.");try{await m.installAllDependencies({cwd:u})}catch(e){a.Log.warning("Unable to install dependencies. Are you connected to the Internet?"),a.Log.warning(`You may need to run ${a.Format.code(`${m.binary} install`)} before ${a.Format.code("diez")} commands will work.`)}y.stop();const h=[u];if(!i)for(const e of["android","ios","web"])h.push(r.join(w,e));try{for(const e of h)await c.initializeGitRepository(e),a.Log.info(`Initialized a Git repository at ${e}.`)}catch(e){}a.Log.info(`Success! Your new Diez Project has been created at ${a.Format.comment(u)}.\n\nIn that directory, the ${a.Format.code("diez")} command line utility can be invoked using:\n  ${a.Format.code(`${p?"yarn":"npm run"} diez`)}\n`),i?a.Log.info(`To see a list of available commands, you can run:\n  ${a.Format.code(`cd ${r.relative(l,u)}\n  ${p?"yarn":"npm run"} diez --help`)}`):(a.Log.info(`Example codebases demonstrating how to integrate Diez in your app have been created at ${a.Format.comment(w)}.\n\nTo get started, we suggest running:\n  ${a.Format.code(`cd ${r.relative(l,u)}\n  ${p?"yarn":"npm run"} demo`)}\n`),a.Log.info("Check out https://diez.org/getting-started to learn more."))});
//# sourceMappingURL=/@diez/createproject/lib/utils.js.map