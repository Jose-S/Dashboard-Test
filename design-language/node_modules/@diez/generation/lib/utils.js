"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const e=require("@diez/cli-core"),t=require("@diez/compiler-core"),a=require("@diez/storage"),n=require("change-case");exports.pascalCase=n.pascalCase;const o=require("fontkit"),i=require("fs-extra"),r=require("path"),s=require("ts-morph"),d=e=>{const t=n.pascalCase(e,void 0,!0);return t.charAt(0).toLowerCase()+t.slice(1)};class c{constructor(){this.componentResolver=new Map,this.propertyResolver=new Map}getComponentName(e){const t=n.pascalCase(e,void 0,!0);if(!this.componentResolver.has(t))return this.componentResolver.set(t,0),t;const a=this.componentResolver.get(t)+1;return this.componentResolver.set(t,a),`${t}${a}`}getPropertyName(e,t){const a=d(e),n=`${t}:${a}`;if(!this.propertyResolver.has(n))return this.propertyResolver.set(n,0),a;const o=this.propertyResolver.get(n)+1;return this.propertyResolver.set(n,o),`${a}${o}`}}exports.UniqueNameResolver=c,exports.createDesignLanguageSpec=((e,t,a,n)=>({assetsDirectory:t,designLanguageName:e,filename:a,projectRoot:n,colors:[],gradients:[],shadows:[],typographs:[],fonts:new Map,assets:new Map})),exports.registerAsset=((e,t,a)=>{const{name:n}=r.parse(e.src);a.has(t)?a.get(t).set(n,e):a.set(t,new Map([[n,e]]))});const l=e=>{e.newLine()},p=(e,t,a,n)=>s.Writers.object(((e,t,a,n)=>e.reduce((e,{name:o,initializer:i})=>(e[a.getPropertyName(o||`Untitled ${n}`,t)]=i,e),{}))(e,t,a,n));exports.registerFont=(async(t,s)=>{const d=n.pascalCase(t.family);s.has(d)||s.set(d,new Map),s.get(d).set(n.pascalCase(t.style),{name:t.name,path:await(async(t,n)=>{const s=o.openSync(t);if(!(e=>null!==e&&"TrueTypeCollection"===e.constructor.name)(s))return t;if(null===s.getFont(n))throw new Error(`The font collection at ${t} does not include a font named ${n}.`);if(!await e.canRunCommand("which otc2otf"))return e.Log.warningOnce("The Adobe Font Development Kit for OpenType is required to extract fonts from font collections.\n\nSee installation instructions here: https://github.com/adobe-type-tools/afdko#installation."),void e.Log.warningOnce(`The font at ${t} cannot be used.`);const d=a.getTempFileName(),c=r.join(d,r.basename(t));i.ensureDirSync(d),i.copySync(t,c),e.Log.info(`Extracting font ${n} from TrueType collection font at ${t}.`),await e.execAsync(`otc2otf ${c}`);for(const e of i.readdirSync(d))if(e===`${n}.ttf`||e===`${n}.otf`)return r.join(d,e)})(t.path,t.name)})}),exports.codegenDesignLanguage=(async e=>{e.designLanguageName=n.pascalCase(e.designLanguageName);const{assetsDirectory:a,designLanguageName:o,projectRoot:h}=e,u=new c,f=t.getProject(h).createSourceFile(e.filename,"",{overwrite:!0}),y=new Set,$=d(u.getComponentName(`${o} Colors`)),w=d(u.getComponentName(`${o} Gradients`)),b=d(u.getComponentName(`${o} Shadows`)),v=d(u.getComponentName(`${o} Typography`)),C=e.colors.length>0,S=e.gradients.length>0,T=e.shadows.length>0,x=e.typographs.length>0;if(C&&(y.add("Color"),f.addVariableStatement({leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:$,initializer:p(e.colors,$,u,"Color")}]})),S&&(y.add("LinearGradient"),y.add("Color"),y.add("GradientStop"),y.add("Point2D"),f.addVariableStatement({leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:w,initializer:p(e.gradients,w,u,"LinearGradient")}]})),T&&(y.add("Color"),y.add("Point2D"),y.add("DropShadow"),f.addVariableStatement({leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:b,initializer:p(e.shadows,b,u,"Shadow")}]})),e.fonts.size){y.add("Font");const t=r.join(a,"fonts");i.ensureDirSync(t);const n=f.addVariableStatement({leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,isExported:!0,declarations:[{name:d(`${o}Fonts`),initializer:"{}"}]}).getDeclarations()[0].getInitializer();for(const[a,o]of e.fonts){const e=n.addPropertyAssignment({name:a,initializer:"{}"}).getInitializer();for(const[a,{name:n,path:s}]of o){if(!s){e.addPropertyAssignment({name:a,initializer:`new Font({name: "${n}"})`});continue}const o=r.join(t,`${n}${r.extname(s)}`);i.copySync(s,o),e.addPropertyAssignment({name:a,initializer:`Font.fromFile("${r.relative(h,o)}")`})}}}x&&(y.add("Color"),y.add("Typograph"),y.add("TextAlignment"),f.addVariableStatement({leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:v,initializer:p(e.typographs,v,u,"Typograph")}]}));for(const[t,a]of e.assets){y.add("Image"),y.add("File");const n={},o={};for(const[e,t]of a){const a=d(e),i=r.parse(t.src);n[a]=`new File({src: "${t.src}"})`,[2,3,4].forEach(e=>{const t=r.join(i.dir,i.name);n[`${a}${e}x`]=`new File({src: "${t}@${e}x${i.ext}"})`}),o[a]=`Image.responsive("${t.src}", ${t.width}, ${t.height})`}f.addVariableStatement({isExported:!0,leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:d(`${e.designLanguageName} ${t} Files`),initializer:s.Writers.object(n)}]}),f.addVariableStatement({isExported:!0,leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:d(`${e.designLanguageName} ${t}`),initializer:s.Writers.object(o)}]})}const z=`${o}Tokens`,D={};return C&&(D.colors=$),S&&(D.gradients=w),T&&(D.shadows=b),x&&(y.add("Font"),D.typography=v),f.addVariableStatement({isExported:!0,leadingTrivia:l,declarationKind:s.VariableDeclarationKind.Const,declarations:[{name:d(z),initializer:s.Writers.object(D)}]}),y.size&&f.addImportDeclaration({moduleSpecifier:"@diez/prefabs",namedImports:Array.from(y).sort().map(e=>({name:e}))}),g(f),m(f),f.formatText(),f.save()});const g=t=>{t.insertStatements(0,`/**\n * This code was generated by Diez version ${e.diezVersion}.\n * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.\n */\n`)},m=e=>{let t;do{t=e.getFullWidth(),e.fixUnusedIdentifiers()}while(t!==e.getFullWidth())};exports.roundFloat=((e,t=15)=>Math.round(e*Math.pow(10,t))/Math.pow(10,t)),exports.objectToSource=(e=>{const t=[];for(const a in e)t.push(`${a}: ${e[a]}`);return`{${t.join(", ")}}`});
//# sourceMappingURL=/@diez/generation/lib/utils.js.map